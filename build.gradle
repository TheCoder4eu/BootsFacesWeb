apply plugin: 'java'
apply plugin: 'war'

// BootsFaces Library Version to use in the Build
ext.BootsFacesVersion = '1.5.0-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
mavenLocal()
mavenCentral()
}

dependencies {
providedCompile 'javax.enterprise:cdi-api:1.2'
providedCompile 'javax.annotation:javax.annotation-api:1.3+'
providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
providedCompile 'com.sun.faces:jsf-api:2.2.+'
providedCompile 'com.sun.faces:jsf-impl:2.2.+'
providedCompile 'org.glassfish.web:el-impl:2.2'
providedCompile 'javax.validation:validation-api:2.0.1.Final'
compile 'org.hibernate:hibernate-validator:6.0.13.Final'
compile 'org.primefaces:primefaces:6.2'
compile 'net.glxn:qrgen:1.4'
compile 'net.sf.barcode4j:barcode4j-light:2.0'
compile 'com.google.zxing:core:3.3.3'
compile 'com.google.zxing:javase:3.3.3'
compile 'org.omnifaces:omnifaces:2.6.9'
compile 'org.highfaces:highfaces:1.3'
compile files("${System.properties['java.home']}/../lib/tools.jar")

compile fileTree(dir: 'bsflib', include: '*.jar') //Required for messages/utils

compile "net.bootsfaces:bootsfaces:${BootsFacesVersion}" //e.g. 1.4.2-SNAPSHOT"
}

war.doFirst {
    String emptyPage="${webAppDir}/empty.xhtml"
    String indexPage="${webAppDir}/index.xhtml"
    String contents = new File( emptyPage ).getText( 'UTF-8' )

    //Replace the text
    contents = contents.replaceAll( 'Title', 'BootsFaces Showcase' )
    Date buildDate = new Date()
    String hostname= InetAddress.getLocalHost().getHostName()
    String currentJvm = org.gradle.internal.jvm.Jvm.current()

	String dependencies="";
	try {
//		eachDependency { DependencyResolveDetails details ->
//			dependencies +="${details.requested.group}:${details.requested.name}:${details.requested.version}"
//		}
    	def compileConfiguration = project.configurations.getByName("compile")
    	def resolvedConfiguration = compileConfiguration.resolvedConfiguration
    	def resolvedArtifacts = resolvedConfiguration.resolvedArtifacts
    	resolvedArtifacts.each { dp ->
			dependencies += "${dp.name}<br/>"
    	}
	} catch (Exception e) {
		dependencies = "Couldn't resolve the dependencies: $e"
	}

    String currentOS = System.properties['os.name']+' '+System.properties['os.version']+' '+System.properties['os.arch']
    String buildInfo = """\n\
                    <b:row>
                    <b:jumbotron>
                        <img src="https://www.bootsfaces.net/img/bsf_logo.png"/>

                        <p>Welcome to the BootsFaces Showcase and Documentation</p>
                        <p><b:navLink value="BootsFaces License" outcome="license" iconAwesome="gavel"/></p>
                        <b:button iconAwesome="info" pt:data-target="#infomodal" pt:data-toggle="modal" onclick="return false;" size="xs" value="" styleClass="pull-right"/>
                    </b:jumbotron>
                </b:row>
                <b:modal id="infomodal" title="Application Build Informations">
                        <b:panel title="Build Informations" look="info">
                           Built on $hostname $currentOS<br/>
                           by Gradle ${project.gradle.gradleVersion}<br/>
                           Java Version $currentJvm<br/>
                           sourceCompatibility $sourceCompatibility<br/>
                           targetCompatibility $targetCompatibility<br/>
                           BootsFacesVersion $BootsFacesVersion<br/>
                           Build Date  ${buildDate}<br/>
                        </b:panel>
                        <b:panel title="Libraries used in the demo" look="info">
                           $dependencies
                       </b:panel>\n\
                    <f:facet name="footer">
                        <b:button value="close" dismiss="modal" onclick="return false;"/>
                    </f:facet>
                </b:modal>
					   """
    contents = contents.replaceAll( '</h1>', '</h1>'+buildInfo )
    new File( indexPage ).write( contents, 'UTF-8' )
}

war {
   archiveName = 'BootsFacesWeb.war'
//   classpath fileTree(dir: 'bsflib', include: '*') // adds a file-set to the WEB-INF/lib dir.
}

