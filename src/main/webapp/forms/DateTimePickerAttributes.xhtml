<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:fragment
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:b="http://bootsfaces.net/ui"
  xmlns:ui="http://java.sun.com/jsf/facelets">

    <b:panel look="info">
      <f:facet name="heading">
        <b>Attributes of &lt;b:dateTimePicker &gt;</b>
      </f:facet>
      <div class="table-responsive">
        <table class="table table-striped table-hover"
          style="background-color: #fff">
          <thead>
            <tr>
              <th>Attribute</th>
              <th>Default value</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
                <td>ajax</td>
                <td>false</td>
                <td>Whether the Button submits the form with AJAX.</td>
            </tr>
            <tr>
                <td>allow-input-toggle<br />allowInputToggle (alternative writing)</td>
                <td>false</td>
                <td>If true, the picker will show on textbox focus and icon click when used in a button group. Default: false.</td>
            </tr>
            <tr>
                <td>auto-update<br />autoUpdate (alternative writing)</td>
                <td>false</td>
                <td>Setting this flag updates the widget on every AJAX request.</td>
            </tr>
            <tr>
                <td>binding</td>
                <td>(none)</td>
                <td>An EL expression referring to a server side UIComponent instance in a backing bean.</td>
            </tr>
            <tr>
                <td>col-lg<br />colLg (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on large screens (≥1200 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-md<br />colMd (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on medium screens (≥992 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-sm<br />colSm (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on small screens (≥768p pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-xs<br />colXs (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on tiny screens (≤ 767 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>collapse</td>
                <td> true </td>
                <td>If true, a Bootstrap collapse animation is used to switch between the date picker and the time picker.</td>
            </tr>
            <tr>
                <td>day-view-header-format<br />dayViewHeaderFormat (alternative writing)</td>
                <td> MMMM YYYY </td>
                <td>Changes the heading of the datepicker when in 'days' view. Default: 'MMMM YYYY'.</td>
            </tr>
            <tr>
                <td>delay</td>
                <td>(none)</td>
                <td>Delays the AJAX request.</td>
            </tr>
            <tr>
                <td>disable-time-interval<br />disableTimeInterval (alternative writing)</td>
                <td>(none)</td>
                <td>Disables time selection between the given moments. Default: false.</td>
            </tr>
            <tr>
                <td>disabled</td>
                <td>false</td>
                <td>Disables the input element, default is false.</td>
            </tr>
            <tr>
                <td>disabled-dates<br />disabledDates (alternative writing)</td>
                <td>(none)</td>
                <td>Disables selection of dates in the array, e.g. holidays. Default: null. Accepts a comma separated list of Date, moment or JavaScript string. For example: '11/22/2013 00:53' (with single quotes).</td>
            </tr>
            <tr>
                <td>display</td>
                <td> block </td>
                <td>If you use the "visible" attribute, the value of this attribute is added. Legal values: block, inline, inline-block. Default: block.</td>
            </tr>
            <tr>
                <td>enabled-dates<br />enabledDates (alternative writing)</td>
                <td>(none)</td>
                <td>Disables selection of dates NOT in the array, e.g. holidays. Default: false. Accepts: array of [date, moment, JavaScript string].</td>
            </tr>
            <tr>
                <td>field-id<br />fieldId (alternative writing)</td>
                <td>(none)</td>
                <td>Unique id of the input field itself (as opposed to the id, which is belongs to the entire component, including the div surrounding the input field).  Useful for frameworks like JAAS, which require you to use a specific field id.</td>
            </tr>
            <tr>
                <td>field-size<br />fieldSize (alternative writing)</td>
                <td>(none)</td>
                <td>The size of the input. Possible values are xs (extra small), sm (small), md (medium) and lg (large) .</td>
            </tr>
            <tr>
                <td>focus-on-show<br />focusOnShow (alternative writing)</td>
                <td> true </td>
                <td>If false, the textbox will not be given focus when the picker is shown. Default: true.</td>
            </tr>
            <tr>
                <td>format</td>
                <td>(none)</td>
                <td>See momentjs' docs for valid formats. Format also dictates which components are shown, e.g. MM/dd/YYYY will not display the time picker.</td>
            </tr>
            <tr>
                <td>hidden</td>
                <td>(none)</td>
                <td>This column is hidden on a certain screen size and below. Legal values: lg, md, sm, xs.</td>
            </tr>
            <tr>
                <td>icon</td>
                <td>(none)</td>
                <td>Picker Icon, can be one of the Bootstrap icon names. </td>
            </tr>
            <tr>
                <td>icon-awesome<br />iconAwesome (alternative writing)</td>
                <td>(none)</td>
                <td>Font Awesome Icon to show in this DateTimePicker, can be one of the Font Awesome icon names.</td>
            </tr>
            <tr>
                <td>icon-brand<br />iconBrand (alternative writing)</td>
                <td>false</td>
                <td>Use the free brand font of FontAwesome 5. As a side effect, every FontAwesome icon on the same page is switched to FontAwesome 5.2.0. By default, the icon set is the older version 4.7.0.</td>
            </tr>
            <tr>
                <td>icon-flip<br />iconFlip (alternative writing)</td>
                <td>(none)</td>
                <td>Flip the icon: can be H (horizontal) or V (vertical).</td>
            </tr>
            <tr>
                <td>icon-inverse<br />iconInverse (alternative writing)</td>
                <td>false</td>
                <td>Switch the icon from black-on-white to white-on-black.</td>
            </tr>
            <tr>
                <td>icon-light<br />iconLight (alternative writing)</td>
                <td>false</td>
                <td>Use the paid 'light' font of FontAwesome 5. As a side effect, every FontAwesome icon on the same page is switched to FontAwesome 5.2.0. By default, the icon set is the older version 4.7.0.</td>
            </tr>
            <tr>
                <td>icon-position<br />iconPosition (alternative writing)</td>
                <td> right </td>
                <td>Put the icon to the left or to the right of the input field. Legal values: 'left' and 'right'. Default value: 'right'.</td>
            </tr>
            <tr>
                <td>icon-pulse<br />iconPulse (alternative writing)</td>
                <td>false</td>
                <td>Boolean value: if true the icon will rotate with 8 discrete steps.</td>
            </tr>
            <tr>
                <td>icon-regular<br />iconRegular (alternative writing)</td>
                <td>false</td>
                <td>Use the paid 'regular' font of FontAwesome 5. As a side effect, every FontAwesome icon on the same page is switched to FontAwesome 5.2.0. By default, the icon set is the older version 4.7.0.</td>
            </tr>
            <tr>
                <td>icon-rotate<br />iconRotate (alternative writing)</td>
                <td>(none)</td>
                <td>Rotate 90 degrees the icon: Can be L,R.</td>
            </tr>
            <tr>
                <td>icon-size<br />iconSize (alternative writing)</td>
                <td>(none)</td>
                <td>Icon Size: legal values are lg (=133%), 2x, 3x, 4x, 5x. If you're using Fontawesome 5, also 6x, 7x, 8x, 9, 10x, xs (=75%), and sm (=87.5%) are allowed.</td>
            </tr>
            <tr>
                <td>icon-solid<br />iconSolid (alternative writing)</td>
                <td>false</td>
                <td>Use the free font of FontAwesome 5. As a side effect, every FontAwesome icon on the same page is switched to FontAwesome 5.2.0. By default, the icon set is the older version 4.7.0.</td>
            </tr>
            <tr>
                <td>icon-spin<br />iconSpin (alternative writing)</td>
                <td>false</td>
                <td>Boolean value: if true the icon will spin.</td>
            </tr>
            <tr>
                <td>id</td>
                <td>(none)</td>
                <td>Unique identifier of the component in a namingContainer.</td>
            </tr>
            <tr>
                <td>immediate</td>
                <td>false</td>
                <td>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase. Default is false.</td>
            </tr>
            <tr>
                <td>initial-date<br />initialDate (alternative writing)</td>
                <td>(none)</td>
                <td>Sets the picker default date/time. Overrides useCurrent. Default: false. Accepts: date, moment, string.</td>
            </tr>
            <tr>
                <td>keep-invalid<br />keepInvalid (alternative writing)</td>
                <td>false</td>
                <td>Will cause the date picker to not revert or overwrite invalid dates. Default: false.</td>
            </tr>
            <tr>
                <td>keep-open<br />keepOpen (alternative writing)</td>
                <td>false</td>
                <td>Will cause the date picker to stay open after selecting a date if no time components are being used. Deafult: false.</td>
            </tr>
            <tr>
                <td>label</td>
                <td>(none)</td>
                <td>An optional label of the field. The label is only shown if you also set render-attribute='true'. The label is also used for error messages.</td>
            </tr>
            <tr>
                <td>label-col-lg<br />labelColLg (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on large screens (≥1200 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>label-col-md<br />labelColMd (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on medium screens (≥992 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>label-col-sm<br />labelColSm (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on small screens (≥768p pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>label-col-xs<br />labelColXs (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on tiny screens (≤ 767 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>label-large-screen<br />labelLargeScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-lg. Integer value to specify how many columns to span on large screens (≥1200 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>label-medium-screen<br />labelMediumScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-md. Integer value to specify how many columns to span on medium screens (≥992 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>label-small-screen<br />labelSmallScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-sm. Integer value to specify how many columns to span on small screens (≥768p pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>label-style<br />labelStyle (alternative writing)</td>
                <td>(none)</td>
                <td>The CSS inline style of the label.</td>
            </tr>
            <tr>
                <td>label-style-class<br />labelStyleClass (alternative writing)</td>
                <td>(none)</td>
                <td>The CSS class of the label.</td>
            </tr>
            <tr>
                <td>label-tiny-screen<br />labelTinyScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-xs. Integer value to specify how many columns to span on tiny screens (≤ 767 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>large-screen<br />largeScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-lg. Integer value to specify how many columns to span on large screens (≥1200 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>locale</td>
                <td>(none)</td>
                <td>The desired locale. It uses the moment.js locales.</td>
            </tr>
            <tr>
                <td>max-date<br />maxDate (alternative writing)</td>
                <td>(none)</td>
                <td>Prevents date/time selections after this date. minDate will override defaultDate and useCurrent if either of these settings are the same day since both options are invalid according to the rules you've selected. Default: false, Accepts: date, moment, string.</td>
            </tr>
            <tr>
                <td>medium-screen<br />mediumScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-md. Integer value to specify how many columns to span on medium screens (≥992 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>min-date<br />minDate (alternative writing)</td>
                <td>(none)</td>
                <td>Prevents date/time selections before this date. minDate will override defaultDate and useCurrent if either of these settings are the same day since both options are invalid according to the rules you've selected. Default: false, Accepts: date, moment, string.</td>
            </tr>
            <tr>
                <td>mode</td>
                <td> component </td>
                <td>Determine the display mode of the component. Available types are: 'inline' (display the full calendar object), 'popup' (text with icon) and 'plain' (only text). Default: 'popup'.</td>
            </tr>
            <tr>
                <td>offset</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-lg<br />offsetLg (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-md<br />offsetMd (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-sm<br />offsetSm (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-xs<br />offsetXs (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>onblur</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element loses focus.</td>
            </tr>
            <tr>
                <td>onchange</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element loses focus and its value has been modified since gaining focus.</td>
            </tr>
            <tr>
                <td>onclick</td>
                <td>(none)</td>
                <td>The onclick attribute.</td>
            </tr>
            <tr>
                <td>oncomplete</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax completes.</td>
            </tr>
            <tr>
                <td>ondblclick</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element is double clicked.</td>
            </tr>
            <tr>
                <td>ondtchange</td>
                <td>(none)</td>
                <td>JavaScript event to manage date time change.</td>
            </tr>
            <tr>
                <td>onerror</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax results on an error (including both network errors and Java exceptions).</td>
            </tr>
            <tr>
                <td>onfocus</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element receives focus.</td>
            </tr>
            <tr>
                <td>onkeydown</td>
                <td>(none)</td>
                <td>Client side callback to execute when a key is pressed down over input element.</td>
            </tr>
            <tr>
                <td>onkeypress</td>
                <td>(none)</td>
                <td>Client side callback to execute when a key is pressed and released over input element.</td>
            </tr>
            <tr>
                <td>onkeyup</td>
                <td>(none)</td>
                <td>Client side callback to execute when a key is released over input element.</td>
            </tr>
            <tr>
                <td>onmousedown</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is pressed down over input element.</td>
            </tr>
            <tr>
                <td>onmousemove</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is moved within input element.</td>
            </tr>
            <tr>
                <td>onmouseout</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is moved away from input element.</td>
            </tr>
            <tr>
                <td>onmouseover</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is moved onto input element.</td>
            </tr>
            <tr>
                <td>onmouseup</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is released over input element.</td>
            </tr>
            <tr>
                <td>onselect</td>
                <td>(none)</td>
                <td>Client side callback to execute when text within input element is selected by user.</td>
            </tr>
            <tr>
                <td>onsuccess</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax completes with success (i.e. there's neither a network error nor a Java exception).</td>
            </tr>
            <tr>
                <td>placeholder</td>
                <td>(none)</td>
                <td>The placeholder attribute shows text in a field until the field is focused upon, then hides the text.</td>
            </tr>
            <tr>
                <td>process</td>
                <td>(none)</td>
                <td>Comma or space separated list of ids or search expressions denoting which values are to be sent to the server.</td>
            </tr>
            <tr>
                <td>readonly</td>
                <td>false</td>
                <td>Flag indicating that this input element will prevent changes by the user.</td>
            </tr>
            <tr>
                <td>render-label<br />renderLabel (alternative writing)</td>
                <td> net.bootsfaces.component.ComponentUtils.isRenderLabelDefault() </td>
                <td>Allows you to suppress automatic rendering of labels. Used internally by AngularFaces, too.</td>
            </tr>
            <tr>
                <td>rendered</td>
                <td>false</td>
                <td>Boolean value to specify the rendering of the component, when set to false the component will not be rendered.</td>
            </tr>
            <tr>
                <td>required</td>
                <td>false</td>
                <td>Boolean value Require input in the component when the form is submitted.</td>
            </tr>
            <tr>
                <td>required-message<br />requiredMessage (alternative writing)</td>
                <td>(none)</td>
                <td>Message to show if the user did not specify a value and the attribute required is set to true.</td>
            </tr>
            <tr>
                <td>show-button-panel<br />showButtonPanel (alternative writing)</td>
                <td>false</td>
                <td>Boolean value to specify if row Buttons to the bottom of calendar should be shown (all button at once).</td>
            </tr>
            <tr>
                <td>show-clear-button<br />showClearButton (alternative writing)</td>
                <td>false</td>
                <td>Show the 'Clear' button in the icon toolbar. Default: false.</td>
            </tr>
            <tr>
                <td>show-close-button<br />showCloseButton (alternative writing)</td>
                <td>false</td>
                <td>Show the 'Close' button in the icon toolbar. Default: false.</td>
            </tr>
            <tr>
                <td>show-date<br />showDate (alternative writing)</td>
                <td> true </td>
                <td>By setting this to false you can deactivate the date part of the dateTimePicker. Is ignored if the attribute 'format' is used..</td>
            </tr>
            <tr>
                <td>show-icon<br />showIcon (alternative writing)</td>
                <td> true </td>
                <td>Show or hide the calendar icon next to the input field. Legal values: 'true' and 'false'. Default value: 'true'.</td>
            </tr>
            <tr>
                <td>show-time<br />showTime (alternative writing)</td>
                <td> true </td>
                <td>By setting this to false you can deactivate the time part of the dateTimePicker. Is ignored if the attribute 'format' is used.</td>
            </tr>
            <tr>
                <td>show-today-button<br />showTodayButton (alternative writing)</td>
                <td>false</td>
                <td>Show the 'Today' button in the icon toolbar. Default: false.</td>
            </tr>
            <tr>
                <td>show-week<br />showWeek (alternative writing)</td>
                <td>false</td>
                <td>Whether or not to show week numbers to the left of week rows. Default false.</td>
            </tr>
            <tr>
                <td>side-by-side<br />sideBySide (alternative writing)</td>
                <td>false</td>
                <td>Shows the picker side by side when using the time and date together. Default: false.</td>
            </tr>
            <tr>
                <td>small-screen<br />smallScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-sm. Integer value to specify how many columns to span on small screens (≥768p pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>span</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to span on medium screens (≥992 pixels). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>style</td>
                <td>(none)</td>
                <td>Inline style of the input element.</td>
            </tr>
            <tr>
                <td>style-class<br />styleClass (alternative writing)</td>
                <td>(none)</td>
                <td>Style class of this element.</td>
            </tr>
            <tr>
                <td>tabindex</td>
                <td>(none)</td>
                <td>Position of this element in the tabbing order for the current document.  This value must be an integer between 0 and 32767.</td>
            </tr>
            <tr>
                <td>time-stepping<br />timeStepping (alternative writing)</td>
                <td> 1 </td>
                <td>Number of minutes the up/down arrow's will move the minutes value in the time picker. Default 1.</td>
            </tr>
            <tr>
                <td>tiny-screen<br />tinyScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-xs. Integer value to specify how many columns to span on tiny screens (≤ 767 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>toolbar-placement<br />toolbarPlacement (alternative writing)</td>
                <td> default </td>
                <td>Changes the placement of the icon toolbar. Default: 'default'. Accepts: 'default', 'top', 'bottom'.</td>
            </tr>
            <tr>
                <td>tooltip</td>
                <td>(none)</td>
                <td>The text of the tooltip.</td>
            </tr>
            <tr>
                <td>tooltip-container<br />tooltipContainer (alternative writing)</td>
                <td> body </td>
                <td>Where is the tooltip div generated? That's primarily a technical value that can be used to fix rendering errors in special cases. Also see data-container in the documentation of Bootstrap. The default value is body.</td>
            </tr>
            <tr>
                <td>tooltip-delay<br />tooltipDelay (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is shown and hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-delay-hide<br />tooltipDelayHide (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-delay-show<br />tooltipDelayShow (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is shown with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-position<br />tooltipPosition (alternative writing)</td>
                <td>(none)</td>
                <td>Where is the tooltip to be displayed? Possible values: "top", "bottom", "right", "left", "auto", "auto top", "auto bottom", "auto right" and "auto left". Default to "bottom".</td>
            </tr>
            <tr>
                <td>update</td>
                <td>(none)</td>
                <td>Component(s) to be updated with ajax.</td>
            </tr>
            <tr>
                <td>use-current<br />useCurrent (alternative writing)</td>
                <td> true </td>
                <td>On show, will set the picker to the current date/time. Default: true.</td>
            </tr>
            <tr>
                <td>use-strict<br />useStrict (alternative writing)</td>
                <td>false</td>
                <td>Defines if moment should use strict date parsing when considering a date to be valid.</td>
            </tr>
            <tr>
                <td>value</td>
                <td>(none)</td>
                <td>Value.</td>
            </tr>
            <tr>
                <td>view-mode<br />viewMode (alternative writing)</td>
                <td> days </td>
                <td>The default view to display when the picker is shown. Note: To limit the picker to selecting, for instance the year and month, use format: MM/YYYY. Default: 'days'. Accepts: 'decades','years','months','days'.</td>
            </tr>
            <tr>
                <td>visible</td>
                <td>(none)</td>
                <td>This column is shown on a certain screen size and above. Legal values: lg, md, sm, xs.</td>
            </tr>
            <tr>
                <td>week-days-disabled<br />weekDaysDisabled (alternative writing)</td>
                <td>(none)</td>
                <td>Days of the week that should be disabled. Values are 0 (Sunday) to 6 (Saturday). Multiple values should be comma-separated. Example: disable weekends: 0,6 or [0,6].</td>
            </tr>
            <tr>
                <td>widgetParent</td>
                <td>(none)</td>
                <td>Parent widget of the popup to prevent overlap in case of DateTimePicker inside a small size container.</td>
            </tr>
          </tbody>
        </table>
      </div>
    </b:panel>
</ui:fragment>
