<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:fragment
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:h="jakarta.faces.html"
  xmlns:f="jakarta.faces.core"
  xmlns:b="http://bootsfaces.net/ui"
  xmlns:ui="jakarta.faces.facelets">

    <b:panel look="info">
      <f:facet name="heading">
        <b>Attributes of &lt;b:commandLink &gt;</b>
      </f:facet>
      <div class="table-responsive">
        <table class="table table-striped table-hover"
          style="background-color: #fff">
          <thead>
            <tr>
              <th>Attribute</th>
              <th>Default value</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
                <td>action</td>
                <td>(none)</td>
                <td>The button action, this can be method expression or a string outcome.</td>
            </tr>
            <tr>
                <td>action-listener<br />actionListener (alternative writing)</td>
                <td>(none)</td>
                <td>A method expression that refers to a method with this signature: void methodName(Action-Event).</td>
            </tr>
            <tr>
                <td>active</td>
                <td>false</td>
                <td>Adds the active state to the link.</td>
            </tr>
            <tr>
                <td>ajax</td>
                <td>false</td>
                <td>Whether the Button submits the form with AJAX.</td>
            </tr>
            <tr>
                <td>auto-update<br />autoUpdate (alternative writing)</td>
                <td>false</td>
                <td>Setting this flag updates the widget on every AJAX request.</td>
            </tr>
            <tr>
                <td>binding</td>
                <td>(none)</td>
                <td>An EL expression referring to a server side UIComponent instance in a backing bean.</td>
            </tr>
            <tr>
                <td>col-lg<br />colLg (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on large screens (≥1200 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-md<br />colMd (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on medium screens (≥992 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-sm<br />colSm (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on small screens (≥768p pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-xs<br />colXs (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on tiny screens (≤ 767 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>content-class<br />contentClass (alternative writing)</td>
                <td>(none)</td>
                <td>content-class is optional: if specified, the content (i.e. the anchor tag) will be displayed with this specific class</td>
            </tr>
            <tr>
                <td>content-style<br />contentStyle (alternative writing)</td>
                <td>(none)</td>
                <td>Inline style of the content area (i.e the anchor tag).</td>
            </tr>
            <tr>
                <td>delay</td>
                <td>(none)</td>
                <td>Delays the AJAX request.</td>
            </tr>
            <tr>
                <td>disabled</td>
                <td>false</td>
                <td>Boolean value to specify if the button is disabled.</td>
            </tr>
            <tr>
                <td>display</td>
                <td> block </td>
                <td>If you use the "visible" attribute, the value of this attribute is added. Legal values: block, inline, inline-block. Default: block.</td>
            </tr>
            <tr>
                <td>fragment</td>
                <td>(none)</td>
                <td>The fragment  that is to be appended to the target URL. The # separator is applied automatically and needs not be included.</td>
            </tr>
            <tr>
                <td>header</td>
                <td>(none)</td>
                <td>If present, this element is rendered as Header in a menu with the text specified by this attribute value: all other attributes will be ignored.</td>
            </tr>
            <tr>
                <td>hidden</td>
                <td>(none)</td>
                <td>This column is hidden on a certain screen size and below. Legal values: lg, md, sm, xs.</td>
            </tr>
            <tr>
                <td>href</td>
                <td>(none)</td>
                <td>Specifies the URL of the page the link goes to.</td>
            </tr>
            <tr>
                <td>icon</td>
                <td>(none)</td>
                <td>Navigation Link Icon, can be one of the Bootstrap's Glyphicons icon names. Alignment can be specified with the icon-align attribute.</td>
            </tr>
            <tr>
                <td>icon-align<br />iconAlign (alternative writing)</td>
                <td>(none)</td>
                <td>Alignment can be right or left.</td>
            </tr>
            <tr>
                <td>icon-awesome<br />iconAwesome (alternative writing)</td>
                <td>(none)</td>
                <td>Navigation Link Font Awesome Icon, can be one of the Font Awesome icon names. Alignment can be specified with the icon-align attribute.</td>
            </tr>
            <tr>
                <td>icon-brand<br />iconBrand (alternative writing)</td>
                <td>false</td>
                <td>Use the free brand font of FontAwesome 5. As a side effect, every FontAwesome icon on the same page is switched to FontAwesome 5.2.0. By default, the icon set is the older version 4.7.0.</td>
            </tr>
            <tr>
                <td>icon-flip<br />iconFlip (alternative writing)</td>
                <td>(none)</td>
                <td>Flip the icon: can be H (horizontal) or V (vertical).</td>
            </tr>
            <tr>
                <td>icon-inverse<br />iconInverse (alternative writing)</td>
                <td>false</td>
                <td>Switch the icon from black-on-white to white-on-black.</td>
            </tr>
            <tr>
                <td>icon-light<br />iconLight (alternative writing)</td>
                <td>false</td>
                <td>Use the paid 'light' font of FontAwesome 5. As a side effect, every FontAwesome icon on the same page is switched to FontAwesome 5.2.0. By default, the icon set is the older version 4.7.0.</td>
            </tr>
            <tr>
                <td>icon-pulse<br />iconPulse (alternative writing)</td>
                <td>false</td>
                <td>Boolean value: if true the icon will rotate with 8 discrete steps.</td>
            </tr>
            <tr>
                <td>icon-regular<br />iconRegular (alternative writing)</td>
                <td>false</td>
                <td>Use the paid 'regular' font of FontAwesome 5. As a side effect, every FontAwesome icon on the same page is switched to FontAwesome 5.2.0. By default, the icon set is the older version 4.7.0.</td>
            </tr>
            <tr>
                <td>icon-rotate<br />iconRotate (alternative writing)</td>
                <td>(none)</td>
                <td>Rotate 90 degrees the icon: Can be L,R.</td>
            </tr>
            <tr>
                <td>icon-size<br />iconSize (alternative writing)</td>
                <td>(none)</td>
                <td>Icon Size: legal values are lg (=133%), 2x, 3x, 4x, 5x. If you're using Fontawesome 5, also 6x, 7x, 8x, 9, 10x, xs (=75%), and sm (=87.5%) are allowed.</td>
            </tr>
            <tr>
                <td>icon-solid<br />iconSolid (alternative writing)</td>
                <td>false</td>
                <td>Use the free font of FontAwesome 5. As a side effect, every FontAwesome icon on the same page is switched to FontAwesome 5.2.0. By default, the icon set is the older version 4.7.0.</td>
            </tr>
            <tr>
                <td>icon-spin<br />iconSpin (alternative writing)</td>
                <td>false</td>
                <td>Boolean value: if true the icon will spin.</td>
            </tr>
            <tr>
                <td>id</td>
                <td>(none)</td>
                <td>Unique identifier of the component in a namingContainer.</td>
            </tr>
            <tr>
                <td>immediate</td>
                <td>false</td>
                <td>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase. Default is false.</td>
            </tr>
            <tr>
                <td>include-view-params<br />includeViewParams (alternative writing)</td>
                <td>false</td>
                <td>Set whether or not the page parameters should be encoded into the target url.</td>
            </tr>
            <tr>
                <td>large-screen<br />largeScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-lg. Integer value to specify how many columns to span on large screens (≥1200 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>look</td>
                <td>(none)</td>
                <td>Make the link look like a button. Can be primary, block, info, success, warning, important, danger, and default. If not specified, a standard HTML hyperlink is rendered.</td>
            </tr>
            <tr>
                <td>medium-screen<br />mediumScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-md. Integer value to specify how many columns to span on medium screens (≥992 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>offset</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-lg<br />offsetLg (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-md<br />offsetMd (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-sm<br />offsetSm (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-xs<br />offsetXs (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>onblur</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element loses focus.</td>
            </tr>
            <tr>
                <td>onchange</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element loses focus and its value has been modified since gaining focus.</td>
            </tr>
            <tr>
                <td>onclick</td>
                <td>(none)</td>
                <td>The onclick attribute.</td>
            </tr>
            <tr>
                <td>oncomplete</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax completes.</td>
            </tr>
            <tr>
                <td>ondblclick</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element is double clicked.</td>
            </tr>
            <tr>
                <td>onerror</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax results on an error (including both network errors and Java exceptions).</td>
            </tr>
            <tr>
                <td>onfocus</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element receives focus.</td>
            </tr>
            <tr>
                <td>onkeydown</td>
                <td>(none)</td>
                <td>Client side callback to execute when a key is pressed down over input element.</td>
            </tr>
            <tr>
                <td>onkeypress</td>
                <td>(none)</td>
                <td>Client side callback to execute when a key is pressed and released over input element.</td>
            </tr>
            <tr>
                <td>onkeyup</td>
                <td>(none)</td>
                <td>Client side callback to execute when a key is released over input element.</td>
            </tr>
            <tr>
                <td>onmousedown</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is pressed down over input element.</td>
            </tr>
            <tr>
                <td>onmousemove</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is moved within input element.</td>
            </tr>
            <tr>
                <td>onmouseout</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is moved away from input element.</td>
            </tr>
            <tr>
                <td>onmouseover</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is moved onto input element.</td>
            </tr>
            <tr>
                <td>onmouseup</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is released over input element.</td>
            </tr>
            <tr>
                <td>onselect</td>
                <td>(none)</td>
                <td>Client side callback to execute when text within input element is selected by user.</td>
            </tr>
            <tr>
                <td>onsuccess</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax completes with success (i.e. there's neither a network error nor a Java exception).</td>
            </tr>
            <tr>
                <td>outcome</td>
                <td>(none)</td>
                <td>The outcome to navigate to.</td>
            </tr>
            <tr>
                <td>process</td>
                <td>(none)</td>
                <td>Comma or space separated list of ids or search expressions denoting which values are to be sent to the server.</td>
            </tr>
            <tr>
                <td>rendered</td>
                <td>false</td>
                <td>Boolean value to specify the rendering of the component, when set to false the component will not be rendered.</td>
            </tr>
            <tr>
                <td>small-screen<br />smallScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-sm. Integer value to specify how many columns to span on small screens (≥768p pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>span</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to span on medium screens (≥992 pixels). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>style</td>
                <td>(none)</td>
                <td>Inline style</td>
            </tr>
            <tr>
                <td>style-class<br />styleClass (alternative writing)</td>
                <td>(none)</td>
                <td>CSS style class</td>
            </tr>
            <tr>
                <td>tabindex</td>
                <td> 0 </td>
                <td>Position of this element in the tabbing order for the current document. This value must be an integer between -1 and 32767. By default, Bootstrap uses 0, which means the tab order is relative to the position of the element in the document.</td>
            </tr>
            <tr>
                <td>target</td>
                <td>(none)</td>
                <td>Optional target of the HTML anchor tag that's rendered. E.g. # opens the link in a new tab. This attribute is only evaluated if you provide an href.</td>
            </tr>
            <tr>
                <td>tiny-screen<br />tinyScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-xs. Integer value to specify how many columns to span on tiny screens (≤ 767 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>tooltip</td>
                <td>(none)</td>
                <td>The text of the tooltip.</td>
            </tr>
            <tr>
                <td>tooltip-container<br />tooltipContainer (alternative writing)</td>
                <td> body </td>
                <td>Where is the tooltip div generated? That's primarily a technical value that can be used to fix rendering errors in special cases. Also see data-container in the documentation of Bootstrap. The default value is body.</td>
            </tr>
            <tr>
                <td>tooltip-delay<br />tooltipDelay (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is shown and hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-delay-hide<br />tooltipDelayHide (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-delay-show<br />tooltipDelayShow (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is shown with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-position<br />tooltipPosition (alternative writing)</td>
                <td>(none)</td>
                <td>Where is the tooltip to be displayed? Possible values: "top", "bottom", "right", "left", "auto", "auto top", "auto bottom", "auto right" and "auto left". Default to "bottom".</td>
            </tr>
            <tr>
                <td>update</td>
                <td>(none)</td>
                <td>Component(s) to be updated with ajax.</td>
            </tr>
            <tr>
                <td>value</td>
                <td>(none)</td>
                <td>Navigation Link text.</td>
            </tr>
            <tr>
                <td>visible</td>
                <td>(none)</td>
                <td>This column is shown on a certain screen size and above. Legal values: lg, md, sm, xs.</td>
            </tr>
          </tbody>
        </table>
      </div>
    </b:panel>
</ui:fragment>
