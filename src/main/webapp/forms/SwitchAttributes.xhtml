<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:fragment
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:h="jakarta.faces.html"
  xmlns:f="jakarta.faces.core"
  xmlns:b="http://bootsfaces.net/ui"
  xmlns:ui="jakarta.faces.facelets">

    <b:panel look="info">
      <f:facet name="heading">
        <b>Attributes of &lt;b:switch &gt;</b>
      </f:facet>
      <div class="table-responsive">
        <table class="table table-striped table-hover"
          style="background-color: #fff">
          <thead>
            <tr>
              <th>Attribute</th>
              <th>Default value</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
                <td>accesskey</td>
                <td>(none)</td>
                <td>Access key to transfer focus to the input element.</td>
            </tr>
            <tr>
                <td>ajax</td>
                <td>false</td>
                <td>Whether the Button submits the form with AJAX.</td>
            </tr>
            <tr>
                <td>alt</td>
                <td>(none)</td>
                <td>Alternate textual description of the input element.</td>
            </tr>
            <tr>
                <td>animate</td>
                <td>false</td>
                <td>Animate the switch. Default value: true.</td>
            </tr>
            <tr>
                <td>auto-update<br />autoUpdate (alternative writing)</td>
                <td>false</td>
                <td>Setting this flag updates the widget on every AJAX request.</td>
            </tr>
            <tr>
                <td>binding</td>
                <td>(none)</td>
                <td>An EL expression referring to a server side UIComponent instance in a backing bean.</td>
            </tr>
            <tr>
                <td>caption</td>
                <td>(none)</td>
                <td>Caption of the check box (text behind the check box, as opposed to the label, which may be above the check box)</td>
            </tr>
            <tr>
                <td>col-lg<br />colLg (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on large screens (≥1200 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-md<br />colMd (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on medium screens (≥992 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-sm<br />colSm (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on small screens (≥768p pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-xs<br />colXs (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on tiny screens (≤ 767 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>converter</td>
                <td>(none)</td>
                <td>An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id.</td>
            </tr>
            <tr>
                <td>converter-message<br />converterMessage (alternative writing)</td>
                <td>(none)</td>
                <td>Message to display when conversion fails.</td>
            </tr>
            <tr>
                <td>delay</td>
                <td>(none)</td>
                <td>Delays the AJAX request.</td>
            </tr>
            <tr>
                <td>dir</td>
                <td>(none)</td>
                <td>Direction indication for text that does not inherit directionality. Legal values: ltr (Default. Left-to-right text direction), rtl (Right-to-left text direction) and auto (let the browser figure out the direction of your alphabet, based on the page content).</td>
            </tr>
            <tr>
                <td>disabled</td>
                <td>false</td>
                <td>Disables the input element, default is false.</td>
            </tr>
            <tr>
                <td>disabled</td>
                <td>false</td>
                <td>Is the switch disabled? Default value: false.</td>
            </tr>
            <tr>
                <td>display</td>
                <td> block </td>
                <td>If you use the "visible" attribute, the value of this attribute is added. Legal values: block, inline, inline-block. Default: block.</td>
            </tr>
            <tr>
                <td>field-size<br />fieldSize (alternative writing)</td>
                <td>(none)</td>
                <td>The size of the input. Possible values are xs (extra small), sm (small), md (medium) and lg (large) .</td>
            </tr>
            <tr>
                <td>handle-width<br />handleWidth (alternative writing)</td>
                <td>0 </td>
                <td>Width of the left and right sides in pixels.</td>
            </tr>
            <tr>
                <td>hidden</td>
                <td>(none)</td>
                <td>This column is hidden on a certain screen size and below. Legal values: lg, md, sm, xs.</td>
            </tr>
            <tr>
                <td>id</td>
                <td>(none)</td>
                <td>Unique identifier of the component in a namingContainer.</td>
            </tr>
            <tr>
                <td>immediate</td>
                <td>false</td>
                <td>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase. Default is false.</td>
            </tr>
            <tr>
                <td>indeterminate</td>
                <td>false</td>
                <td>Indeterminate state. Turned off by default.</td>
            </tr>
            <tr>
                <td>inverse</td>
                <td>false</td>
                <td>Inverse switch direction. Default value: false</td>
            </tr>
            <tr>
                <td>label</td>
                <td>(none)</td>
                <td>The label above of the field .</td>
            </tr>
            <tr>
                <td>label-style<br />labelStyle (alternative writing)</td>
                <td>(none)</td>
                <td>The CSS inline style of the label.</td>
            </tr>
            <tr>
                <td>label-style-class<br />labelStyleClass (alternative writing)</td>
                <td>(none)</td>
                <td>The CSS class of the label.</td>
            </tr>
            <tr>
                <td>label-text<br />labelText (alternative writing)</td>
                <td>(none)</td>
                <td>Text of the center handle of the switch. Default value: a space (nbsp).</td>
            </tr>
            <tr>
                <td>label-width<br />labelWidth (alternative writing)</td>
                <td>0 </td>
                <td>Width of the center handle in pixels.</td>
            </tr>
            <tr>
                <td>lang</td>
                <td>(none)</td>
                <td>Code describing the language used in the generated markup for this component.</td>
            </tr>
            <tr>
                <td>large-screen<br />largeScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-lg. Integer value to specify how many columns to span on large screens (≥1200 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>medium-screen<br />mediumScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-md. Integer value to specify how many columns to span on medium screens (≥992 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>off-color<br />offColor (alternative writing)</td>
                <td>(none)</td>
                <td>Color of the right hand side of the switch. Legal values: 'primary', 'info', 'success', 'warning', 'danger', 'default'. Default value: 'primary'.</td>
            </tr>
            <tr>
                <td>off-text<br />offText (alternative writing)</td>
                <td>(none)</td>
                <td>Optional label of the inactive switch. The default value is 'off'.</td>
            </tr>
            <tr>
                <td>offset</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-lg<br />offsetLg (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-md<br />offsetMd (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-sm<br />offsetSm (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-xs<br />offsetXs (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>on-color<br />onColor (alternative writing)</td>
                <td>(none)</td>
                <td>Color of the left hand side of the switch. Legal values: 'primary', 'info', 'success', 'warning', 'danger', 'default'. Default value: 'primary'.</td>
            </tr>
            <tr>
                <td>on-text<br />onText (alternative writing)</td>
                <td>(none)</td>
                <td>Optional label of the active switch. The default value is 'on'.</td>
            </tr>
            <tr>
                <td>onblur</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element loses focus.</td>
            </tr>
            <tr>
                <td>onchange</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element loses focus and its value has been modified since gaining focus.</td>
            </tr>
            <tr>
                <td>onclick</td>
                <td>(none)</td>
                <td>OnClick DHTML event .</td>
            </tr>
            <tr>
                <td>onclick</td>
                <td>(none)</td>
                <td>The onclick attribute.</td>
            </tr>
            <tr>
                <td>oncomplete</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax completes.</td>
            </tr>
            <tr>
                <td>ondblclick</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element is double clicked.</td>
            </tr>
            <tr>
                <td>onerror</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax results on an error (including both network errors and Java exceptions).</td>
            </tr>
            <tr>
                <td>onfocus</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element receives focus.</td>
            </tr>
            <tr>
                <td>onkeydown</td>
                <td>(none)</td>
                <td>Client side callback to execute when a key is pressed down over input element.</td>
            </tr>
            <tr>
                <td>onkeypress</td>
                <td>(none)</td>
                <td>Client side callback to execute when a key is pressed and released over input element.</td>
            </tr>
            <tr>
                <td>onkeyup</td>
                <td>(none)</td>
                <td>Client side callback to execute when a key is released over input element.</td>
            </tr>
            <tr>
                <td>onmousedown</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is pressed down over input element.</td>
            </tr>
            <tr>
                <td>onmousemove</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is moved within input element.</td>
            </tr>
            <tr>
                <td>onmouseout</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is moved away from input element.</td>
            </tr>
            <tr>
                <td>onmouseover</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is moved onto input element.</td>
            </tr>
            <tr>
                <td>onmouseup</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is released over input element.</td>
            </tr>
            <tr>
                <td>onselect</td>
                <td>(none)</td>
                <td>Client side callback to execute when text within input element is selected by user.</td>
            </tr>
            <tr>
                <td>onsuccess</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax completes with success (i.e. there's neither a network error nor a Java exception).</td>
            </tr>
            <tr>
                <td>process</td>
                <td>(none)</td>
                <td>Comma or space separated list of ids or search expressions denoting which values are to be sent to the server.</td>
            </tr>
            <tr>
                <td>readonly</td>
                <td>false</td>
                <td>Flag indicating that this input element will prevent changes by the user.</td>
            </tr>
            <tr>
                <td>readonly</td>
                <td>false</td>
                <td>Is the switch readonly? Default value: false.</td>
            </tr>
            <tr>
                <td>render-label<br />renderLabel (alternative writing)</td>
                <td> net.bootsfaces.component.ComponentUtils.isRenderLabelDefault() </td>
                <td>Allows you to suppress automatic rendering of labels. Used internally by AngularFaces, too.</td>
            </tr>
            <tr>
                <td>rendered</td>
                <td>false</td>
                <td>Boolean value to specify the rendering of the component, when set to false the component will not be rendered.</td>
            </tr>
            <tr>
                <td>small-screen<br />smallScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-sm. Integer value to specify how many columns to span on small screens (≥768p pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>span</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to span on medium screens (≥992 pixels). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>style</td>
                <td>(none)</td>
                <td>Inline style of the input element.</td>
            </tr>
            <tr>
                <td>style-class<br />styleClass (alternative writing)</td>
                <td>(none)</td>
                <td>Style class of the input element.</td>
            </tr>
            <tr>
                <td>switchsize</td>
                <td>(none)</td>
                <td>The checkbox size. Legal values: null, 'mini', 'small', 'normal', 'large'. Default value: 'null'.</td>
            </tr>
            <tr>
                <td>tabindex</td>
                <td>(none)</td>
                <td>Advisory tooltip information.</td>
            </tr>
            <tr>
                <td>tiny-screen<br />tinyScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-xs. Integer value to specify how many columns to span on tiny screens (≤ 767 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>title</td>
                <td>(none)</td>
                <td>Advisory tooltip information.</td>
            </tr>
            <tr>
                <td>tooltip</td>
                <td>(none)</td>
                <td>The text of the tooltip.</td>
            </tr>
            <tr>
                <td>tooltip-container<br />tooltipContainer (alternative writing)</td>
                <td> body </td>
                <td>Where is the tooltip div generated? That's primarily a technical value that can be used to fix rendering errors in special cases. Also see data-container in the documentation of Bootstrap. The default value is body.</td>
            </tr>
            <tr>
                <td>tooltip-delay<br />tooltipDelay (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is shown and hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-delay-hide<br />tooltipDelayHide (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-delay-show<br />tooltipDelayShow (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is shown with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-position<br />tooltipPosition (alternative writing)</td>
                <td>(none)</td>
                <td>Where is the tooltip to be displayed? Possible values: "top", "bottom", "right", "left", "auto", "auto top", "auto bottom", "auto right" and "auto left". Default to "bottom".</td>
            </tr>
            <tr>
                <td>update</td>
                <td>(none)</td>
                <td>Component(s) to be updated with ajax.</td>
            </tr>
            <tr>
                <td>value</td>
                <td>(none)</td>
                <td>EL expression referring to the back-end bean attribute providing the value of the field.</td>
            </tr>
            <tr>
                <td>value-change-listener<br />valueChangeListener (alternative writing)</td>
                <td>(none)</td>
                <td>A method binding expression referring to a method for handling a valuechangeevent.</td>
            </tr>
            <tr>
                <td>visible</td>
                <td>(none)</td>
                <td>This column is shown on a certain screen size and above. Legal values: lg, md, sm, xs.</td>
            </tr>
          </tbody>
        </table>
      </div>
    </b:panel>
</ui:fragment>
