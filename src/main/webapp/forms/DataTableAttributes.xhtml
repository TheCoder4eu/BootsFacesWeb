<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:fragment
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:b="http://bootsfaces.net/ui"
  xmlns:ui="http://java.sun.com/jsf/facelets">

    <b:panel look="info">
      <f:facet name="heading">
        <b>Attributes of &lt;b:dataTable &gt;</b>
      </f:facet>
      <div class="table-responsive">
        <table class="table table-striped table-hover"
          style="background-color: #fff">
          <thead>
            <tr>
              <th>Attribute</th>
              <th>Default value</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
                <td>ajax</td>
                <td>false</td>
                <td>Whether the Button submits the form with AJAX.</td>
            </tr>
            <tr>
                <td>auto-update<br />autoUpdate (alternative writing)</td>
                <td>false</td>
                <td>Setting this flag updates the widget on every AJAX request.</td>
            </tr>
            <tr>
                <td>border</td>
                <td> true </td>
                <td>If set, this will surround the table by a border. Defaults to true.</td>
            </tr>
            <tr>
                <td>caption</td>
                <td>(none)</td>
                <td>Optional attribute describing what the datatable is for. Usually, this attribute is used by screen readers to help the user to quickly grasp the intent of the table.</td>
            </tr>
            <tr>
                <td>col-lg<br />colLg (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on large screens (≥1200 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-md<br />colMd (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on medium screens (≥992 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-sm<br />colSm (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on small screens (≥768p pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-xs<br />colXs (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on tiny screens (≤ 767 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>column-visibility<br />columnVisibility (alternative writing)</td>
                <td> false </td>
                <td>Adds a button allowing the user to show and hide of the columns.</td>
            </tr>
            <tr>
                <td>content-disabled<br />contentDisabled (alternative writing)</td>
                <td> false </td>
                <td>Enables or disables every child element of this container. By default, child elements are enabled.</td>
            </tr>
            <tr>
                <td>copy</td>
                <td> false </td>
                <td>Adds a 'copy to clipboard' button.</td>
            </tr>
            <tr>
                <td>csv</td>
                <td> false </td>
                <td>Adds a 'export CSV file' button.</td>
            </tr>
            <tr>
                <td>custom-lang-url<br />customLangUrl (alternative writing)</td>
                <td>(none)</td>
                <td>Defines a custom lang file url for languages BootsFaces doesn't support out-of-the-box.</td>
            </tr>
            <tr>
                <td>custom-options<br />customOptions (alternative writing)</td>
                <td>(none)</td>
                <td>Allows you to pass an arbitrary option to the datatable widget. Separate the options by a comma if you pass more than one. Note that this may cause incompatibilities when the next version of BootsFaces is released. Use at own risk.</td>
            </tr>
            <tr>
                <td>delay</td>
                <td>(none)</td>
                <td>Delays the AJAX request.</td>
            </tr>
            <tr>
                <td>deselect-on-backdrop-click<br />deselectOnBackdropClick (alternative writing)</td>
                <td> false </td>
                <td>If you set this option to true, the user can de-select rows by simply clicking outside the table. Defaults to false.</td>
            </tr>
            <tr>
                <td>disabled</td>
                <td>false</td>
                <td>Boolean value to specify if the button is disabled.</td>
            </tr>
            <tr>
                <td>display</td>
                <td> block </td>
                <td>If you use the "visible" attribute, the value of this attribute is added. Legal values: block, inline, inline-block. Default: block.</td>
            </tr>
            <tr>
                <td>excel</td>
                <td> false </td>
                <td>Adds a 'export Excel file' button.</td>
            </tr>
            <tr>
                <td>fixed-header<br />fixedHeader (alternative writing)</td>
                <td>false</td>
                <td>Activates the fixed header plugin of the dataTable.</td>
            </tr>
            <tr>
                <td>hidden</td>
                <td>(none)</td>
                <td>This column is hidden on a certain screen size and below. Legal values: lg, md, sm, xs.</td>
            </tr>
            <tr>
                <td>id</td>
                <td>(none)</td>
                <td>Unique identifier of the component in a namingContainer.</td>
            </tr>
            <tr>
                <td>immediate</td>
                <td>false</td>
                <td>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase. Default is false.</td>
            </tr>
            <tr>
                <td>info</td>
                <td> true </td>
                <td>If set, this will enable the information about record count. Defaults to true.</td>
            </tr>
            <tr>
                <td>lang</td>
                <td>(none)</td>
                <td>Configured lang for the dataTable. If no default language is configured, the language configured in the browser is used.</td>
            </tr>
            <tr>
                <td>large-screen<br />largeScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-lg. Integer value to specify how many columns to span on large screens (≥1200 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>length-change<br />lengthChange (alternative writing)</td>
                <td> true </td>
                <td>Activates the page length menu of the dataTable. Default value is 'true'.</td>
            </tr>
            <tr>
                <td>mark-search-results<br />markSearchResults (alternative writing)</td>
                <td>false</td>
                <td>If true, search results are marked yellow as you type. Based on mark.js (see https://datatables.net/blog/2017-01-19).</td>
            </tr>
            <tr>
                <td>medium-screen<br />mediumScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-md. Integer value to specify how many columns to span on medium screens (≥992 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>multi-column-search<br />multiColumnSearch (alternative writing)</td>
                <td>false</td>
                <td>If true, &lt;b:inputText /&gt; fields will be generated at the bottom of each column which allow you to perform per-column filtering.</td>
            </tr>
            <tr>
                <td>multi-column-search-position<br />multiColumnSearchPosition (alternative writing)</td>
                <td> bottom </td>
                <td>Should the multi-column-search attributes be at the bottom or the top of the table? Legal values: 'top','botton', and 'both'. Default to 'bottom'.</td>
            </tr>
            <tr>
                <td>offset</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-lg<br />offsetLg (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-md<br />offsetMd (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-sm<br />offsetSm (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-xs<br />offsetXs (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>onclick</td>
                <td>(none)</td>
                <td>The onclick attribute.</td>
            </tr>
            <tr>
                <td>oncomplete</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax completes.</td>
            </tr>
            <tr>
                <td>ondblclick</td>
                <td>(none)</td>
                <td>Client side callback to execute when input element is double clicked.</td>
            </tr>
            <tr>
                <td>ondeselect</td>
                <td>(none)</td>
                <td>Client side and/or AJAX callback to execute when a row is deselected.</td>
            </tr>
            <tr>
                <td>onerror</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax results on an error (including both network errors and Java exceptions).</td>
            </tr>
            <tr>
                <td>onmousedown</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is pressed down over input element.</td>
            </tr>
            <tr>
                <td>onmousemove</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is moved within input element.</td>
            </tr>
            <tr>
                <td>onmouseout</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is moved away from input element.</td>
            </tr>
            <tr>
                <td>onmouseover</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is moved onto input element.</td>
            </tr>
            <tr>
                <td>onmouseup</td>
                <td>(none)</td>
                <td>Client side callback to execute when a pointer input element is released over input element.</td>
            </tr>
            <tr>
                <td>onorder</td>
                <td>(none)</td>
                <td>Client side and/or AJAX callback to execute when the table is sorted.</td>
            </tr>
            <tr>
                <td>onpage</td>
                <td>(none)</td>
                <td>Client side and/or AJAX callback to execute when the current table page changes.</td>
            </tr>
            <tr>
                <td>onsearch</td>
                <td>(none)</td>
                <td>Client side and/or AJAX callback to execute when the user starts a search.</td>
            </tr>
            <tr>
                <td>onselect</td>
                <td>(none)</td>
                <td>Client side and/or AJAX callback to execute when a row is selected.</td>
            </tr>
            <tr>
                <td>onsuccess</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax completes with success (i.e. there's neither a network error nor a Java exception).</td>
            </tr>
            <tr>
                <td>page-length<br />pageLength (alternative writing)</td>
                <td> 10 </td>
                <td>Sets the default page length for paginated dataTable. The default value is 10.</td>
            </tr>
            <tr>
                <td>page-length-menu<br />pageLengthMenu (alternative writing)</td>
                <td> [ 10, 25, 50, 100 ] </td>
                <td>Sets the default page length for paginated dataTable. The default value is [10, 25, 50, 100]. The brackets are optional. Read https://www.datatables.net/examples/advanced_init/length_menu.html for details.</td>
            </tr>
            <tr>
                <td>paginated</td>
                <td> true </td>
                <td>Activates the pagination of the dataTable. Default value is 'true'.</td>
            </tr>
            <tr>
                <td>pdf</td>
                <td> false </td>
                <td>Adds a 'export PDF file' button.</td>
            </tr>
            <tr>
                <td>print</td>
                <td> false </td>
                <td>Adds a 'print' button.</td>
            </tr>
            <tr>
                <td>process</td>
                <td>(none)</td>
                <td>Comma or space separated list of ids or search expressions denoting which values are to be sent to the server.</td>
            </tr>
            <tr>
                <td>rendered</td>
                <td>false</td>
                <td>Boolean value to specify the rendering of the component, when set to false the component will not be rendered.</td>
            </tr>
            <tr>
                <td>responsive</td>
                <td>false</td>
                <td>Activates the responsive plugin of the dataTable</td>
            </tr>
            <tr>
                <td>row-group<br />rowGroup (alternative writing)</td>
                <td>(none)</td>
                <td>Group the rows by a common column value. Can be a number or a Json-object, as documented at https://datatables.net/reference/option/#rowgroup.</td>
            </tr>
            <tr>
                <td>row-highlight<br />rowHighlight (alternative writing)</td>
                <td> true </td>
                <td>Enable the row highlight css. Default: true.</td>
            </tr>
            <tr>
                <td>row-style-class<br />rowStyleClass (alternative writing)</td>
                <td>(none)</td>
                <td>Optional CSS class for each row. If it's an EL expression, it's evaluated for each row. You can also provide a comma-separated list. In this case, the CSS classes are assigned cyclically to the row.</td>
            </tr>
            <tr>
                <td>save-state<br />saveState (alternative writing)</td>
                <td> true </td>
                <td>Stores the state of the datatable on the client, so that after a page reload the same filters are active, the same page is shown etc.</td>
            </tr>
            <tr>
                <td>scroll-collapse<br />scrollCollapse (alternative writing)</td>
                <td> true </td>
                <td>If set, this will have the container match the height of the rows shown in the table if that height is smaller than that given height by the scroll-size. Default: true.</td>
            </tr>
            <tr>
                <td>scroll-horizontally<br />scrollHorizontally (alternative writing)</td>
                <td>false</td>
                <td>Adds a horizontal scroll bar on small screens. Similar to scroll-x, but wraps the entire table within the scroll area. Defaults to false.</td>
            </tr>
            <tr>
                <td>scroll-size<br />scrollSize (alternative writing)</td>
                <td>(none)</td>
                <td>If set, force the height of table to the size specified. You can optionally to add the unit (e.g. scroll-size="200px"). By default, it's px.</td>
            </tr>
            <tr>
                <td>scroll-x<br />scrollX (alternative writing)</td>
                <td>false</td>
                <td>If set, the table can scroll horizontally. Similar to scroll-horizontally, but uses a different approach, so the page selector and the search are not scrolled with the table. Defaults to false.</td>
            </tr>
            <tr>
                <td>searching</td>
                <td> true </td>
                <td>If set to false, this feature completely disables the search functionality of the datatable (i.e. both the UI and the JavaScript API).</td>
            </tr>
            <tr>
                <td>select</td>
                <td>false</td>
                <td>Allows the user to select rows. Defaults to false. Is automatically set to true if selected-column, selected-row or selection-mode is set.</td>
            </tr>
            <tr>
                <td>selected-column<br />selectedColumn (alternative writing)</td>
                <td>(none)</td>
                <td>Optional parameter defining which columns are selected when the datatable is initially rendered. If this attribute is an integer, it's the column index. If it's a string, it's a jQuery expression. Automatically sets selection='true' and selected-items='column'.</td>
            </tr>
            <tr>
                <td>selected-items<br />selectedItems (alternative writing)</td>
                <td>(none)</td>
                <td>Determines whether rows, columns or individual cells are selected. Legal values are 'row', 'column', and 'cell'. The default value is 'row'. Automatically sets select='true'.</td>
            </tr>
            <tr>
                <td>selected-row<br />selectedRow (alternative writing)</td>
                <td>(none)</td>
                <td>Optional parameter defining which rows are selected when the datatable is initially rendered. If this attribute is an integer, it's the row index. If it's a string, it's a jQuery expression. If it's another object, it's compared to the loop var.  Automatically sets selection='true' and selected-items='row'.</td>
            </tr>
            <tr>
                <td>selection-info<br />selectionInfo (alternative writing)</td>
                <td> true </td>
                <td>The datatable shows below the table how many rows are selected. Setting this option to false deactivates this feature. Defaults to true.</td>
            </tr>
            <tr>
                <td>selection-mode<br />selectionMode (alternative writing)</td>
                <td> multiple </td>
                <td>Set this property to "single" if you want to prevent multiple selections. Default is "multiple".</td>
            </tr>
            <tr>
                <td>small-screen<br />smallScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-sm. Integer value to specify how many columns to span on small screens (≥768p pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>span</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to span on medium screens (≥992 pixels). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>striped</td>
                <td> true </td>
                <td>If set, this will show the row in alternating background colors (typically shades of gray). Defaults to true.</td>
            </tr>
            <tr>
                <td>style</td>
                <td>(none)</td>
                <td>Inline style of the input element.</td>
            </tr>
            <tr>
                <td>style-class<br />styleClass (alternative writing)</td>
                <td>(none)</td>
                <td>Style class of this element.</td>
            </tr>
            <tr>
                <td>tiny-screen<br />tinyScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-xs. Integer value to specify how many columns to span on tiny screens (≤ 767 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>tooltip</td>
                <td>(none)</td>
                <td>The text of the tooltip.</td>
            </tr>
            <tr>
                <td>tooltip-container<br />tooltipContainer (alternative writing)</td>
                <td> body </td>
                <td>Where is the tooltip div generated? That's primarily a technical value that can be used to fix rendering errors in special cases. Also see data-container in the documentation of Bootstrap. The default value is body.</td>
            </tr>
            <tr>
                <td>tooltip-delay<br />tooltipDelay (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is shown and hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-delay-hide<br />tooltipDelayHide (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-delay-show<br />tooltipDelayShow (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is shown with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-position<br />tooltipPosition (alternative writing)</td>
                <td>(none)</td>
                <td>Where is the tooltip to be displayed? Possible values: "top", "bottom", "right", "left", "auto", "auto top", "auto bottom", "auto right" and "auto left". Default to "bottom".</td>
            </tr>
            <tr>
                <td>update</td>
                <td>(none)</td>
                <td>Component(s) to be updated with ajax.</td>
            </tr>
            <tr>
                <td>value</td>
                <td>(none)</td>
                <td>EL expression referring to the back-end bean attribute providing the value of the field.</td>
            </tr>
            <tr>
                <td>var</td>
                <td>(none)</td>
                <td>The var attribute sets the name of a request-scope attribute exposing the data for each iteration over the rows in the underlying data model for this table.</td>
            </tr>
            <tr>
                <td>visible</td>
                <td>(none)</td>
                <td>This column is shown on a certain screen size and above. Legal values: lg, md, sm, xs.</td>
            </tr>
            <tr>
                <td>widgetVar</td>
                <td>(none)</td>
                <td>optional widget variable to access the datatable widget in JavaScript code.</td>
            </tr>
          </tbody>
        </table>
      </div>
    </b:panel>
</ui:fragment>
