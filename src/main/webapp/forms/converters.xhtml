<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="jakarta.faces.html"
      xmlns:f="jakarta.faces.core"
      xmlns:b="http://bootsfaces.net/ui"
      xmlns:ui="jakarta.faces.facelets">
  <h:head>
    <title>BootsFaces: next-gen JSF Framework</title>
  <meta name="author" content="Riccardo Massera"></meta>
  </h:head>
  <h:body style="padding-top: 60px">
    <ui:composition template="/applayout/pageTemplate.xhtml">

      <ui:define name="content-navigator">
        <b:listLinks>
          <b:navLink href="#jsf_converters" value="JSF converters" />
          <b:navLink href="#converter_demo" value="Converter demo" />
          <b:navLink href="#select_one" value="SelectOneMenu with converters" />
        </b:listLinks>
      </ui:define>


      <ui:define name="content">
        <h1><a id="jsf_converters">JSF converters</a><b:badge value="Since 1.1.0" /></h1>
        <p>Most form widgets of BootsFaces support the JSF converters. For some reason, this feature
        has been added to BootsFaces late, so chances are we've missed a component. If you encounter
        such a component, please open a but report at
        <a target="#" href="https://github.com/TheCoder4eu/BootsFaces-OSP/issues">https://github.com/TheCoder4eu/BootsFaces-OSP/issues</a>.</p>
        <p>Converters are used the way you're used from standard JSF: either by defining a <code>&lt;f:converter /&gt;</code> tag,
        or by providing the id of the converter with the <code>converter</code> attribute of the input field.</p>

        <h1><a id="converter_demo">Converter demo</a></h1>


        <b:panel title="Live preview" look="info" collapsible="false">
          <h:form>
            <b:panelGrid columns="2">
              <b:inputText value="#{bookshopBean.price}" required="true" label="price"
                           onchange="ajax:bookshopBean.calculate()" update="result @this">
                <f:convertNumber />
              </b:inputText>

              <b:inputText value="#{bookshopBean.discount}" required="true" label="discount"
                           onchange="ajax:bookshopBean.calculate()" update="result">
                <f:convertNumber />
              </b:inputText>
              <b:inputText value="#{bookshopBean.quantity}" required="true" label="number of books"
                           onchange="ajax:bookshopBean.calculate()" update="result">
                <f:convertNumber integerOnly="true" />
              </b:inputText>
              <b:selectBooleanCheckbox value="#{bookshopBean.vat}" ajax="true" process="@this" label="add VAT"
                                       onchange="ajax:bookshopBean.calculate()" update="result @this"
                                       converter="de.beyondjava.vatConverter"  />

              <b:inputText value="#{bookshopBean.total}" disabled="true" label="total"  id="result">
                <f:convertNumber />
              </b:inputText>
              <b:commandButton value="calculate" actionListener="#{bookshopBean.calculate}"
                               onclick="ajax:bookshopBean.calculate()" update="result" />
              <b:messages />
            </b:panelGrid>
          </h:form>

          <f:facet name="footer">
            <b:tabView activeIndex="0"  contentStyle="border-right: 1px solid #ddd;border-left: 1px solid #ddd;border-bottom: 1px solid #ddd;padding:10px">
              <b:tab title="JSF markup">
                <b:panel>
                  <script type="syntaxhighlighter"
                  class="brush: xml; toolbar: false;gutter: false; first-line: 1">
                  <![CDATA[
                  <h:form>
                    <b:panelGrid columns="2">
                      <b:inputText value="&num;{bookshopBean.price}" required="true" label="price"
                                   onchange="ajax:bookshopBean.calculate()" update="result @this">
                        <f:convertNumber />
                      </b:inputText>
                      <b:inputText value="&num;{bookshopBean.discount}" required="true" label="discount"
                                   onchange="ajax:bookshopBean.calculate()" update="result">
                        <f:convertNumber />
                      </b:inputText>
                      <b:inputText value="&num;{bookshopBean.quantity}" required="true" label="number of books"
                                   onchange="ajax:bookshopBean.calculate()" update="result">
                        <f:convertNumber integerOnly="true" />
                      </b:inputText>
                      <b:selectBooleanCheckbox value="&num;{bookshopBean.vat}" ajax="true" process="@this" label="add VAT"
                                               onchange="ajax:bookshopBean.calculate()" update="result @this"
                                               converter="de.beyondjava.vatConverter" />

                      <b:inputText value="&num;{bookshopBean.total}" disabled="true" label="total"  id="result">
                        <f:convertNumber />
                      </b:inputText>
                      <b:commandButton value="calculate" actionListener="&num;{bookshopBean.calculate}"
                                       onclick="ajax:bookshopBean.calculate()" update="result" />
                      <b:messages />
                    </b:panelGrid>
                  </h:form>
                  ]]>
                  </script>
                </b:panel>
              </b:tab>
              <b:tab title="Custom converter">
                <b:panel>
                  <script type="syntaxhighlighter"
                  class="brush: java; toolbar: false;gutter: false; first-line: 1">
                  <![CDATA[
                  @FacesConverter("de.beyondjava.vatConverter")
                  public class VatConverter implements Converter {

                    @Override
                    public Object getAsObject(FacesContext context, UIComponent component, String value) {

                      if (null == value)
                      return null;
                      if (value.equals("false")){
                        return 0;
                      }
                      return 7;
                    }

                    @Override
                    public String getAsString(FacesContext context, UIComponent component, Object value) {
                      if (null == value)
                      return null;
                      if (value instanceof Number) {
                        int v = ((Number)value).intValue();
                        if (v==0) return "false";
                        return "true";
                      }
                      return null;

                    }
                  }
                  ]]>
                  </script>
                </b:panel>
              </b:tab>
              <b:tab title="Java Bean">
                <b:panel>
                  <script type="syntaxhighlighter"
                  class="brush: java; toolbar: false;gutter: false; first-line: 1">
                  <![CDATA[
                  @ManagedBean
                  @ViewScoped
                  public class BookshopBean implements Serializable {
                    private static final long serialVersionUID = 1L;
                    private double discount=10.5;
                    private double price=34.90;
                    private int quantity=1;
                    private double vat = 7;
                    private double total=0;

                    public void calculate() {
                      total = quantity * (price * (100.0-discount)/100.0) * (100.0+vat)/100.0;
                    }

                    // getters and setters omitted for the sake of brevity
                  }                 ]]>
                  </script>
                </b:panel>
              </b:tab>
            </b:tabView>
          </f:facet>
        </b:panel>
        <h1><a id="select_one">Using converters with &lt;b:selectOneMenu /&gt;</a><b:badge value="Since 1.2.1" /></h1>
        <p>This example has been inspired by <a href="#" target="https://memorynotfound.com/using-custom-converter-for-hselectonemenu/">https://memorynotfound.com/using-custom-converter-for-hselectonemenu/</a>.
 		</p>
 		<b:panel title="Using a converter with b:selectOneMenu">
			<b:form>
				<b:panelGrid columns="3">
					<b:selectOneMenu value="#{beersBean.selectedBeer}" ajax="true" process="@this" update="@next @next:@next" label="Your favorite beer brand?">
						<f:converter converterId="beerConverter" />
						<f:selectItems value="#{beersBean.beers}" var="beer"
							itemValue="#{beer}" itemLabel="#{beer.brand}" />
					</b:selectOneMenu>
					<b:inputText value="#{beersBean.selectedBeer.id}" label="id"  disabled="true"/>
					<b:inputText value="#{beersBean.selectedBeer.brand}" label="name"  disabled="true"/>
				
					<b:selectOneMenu value="#{beersBean.selectedBeer2}" ajax="true" process="@this" update="@after"
						converter="beerConverter" label="Any other beer you like?">
						<f:selectItems value="#{beersBean.beers}" var="beer"
							itemValue="#{beer}" itemLabel="#{beer.brand}" />
					</b:selectOneMenu>
					<b:inputText value="#{beersBean.selectedBeer2.id}" label="id" disabled="true"/>
					<b:inputText value="#{beersBean.selectedBeer2.brand}" label="name" disabled="true"/>
					
					<b:selectOneMenu value="#{beersBean.selectedWine}" ajax="true" process="@this" update="@after"
						label="Any wine you like?">
						<f:selectItems value="#{beersBean.wines}" var="wine"
							itemValue="#{wine}" itemLabel="#{wine.brand}" />
					</b:selectOneMenu>
					<b:inputText value="#{beersBean.selectedWine.id}" label="id" disabled="true"/>
					<b:inputText value="#{beersBean.selectedWine.brand}" label="name" disabled="true"/>
					
				</b:panelGrid>
			</b:form>
 		    <f:facet name="footer">
            <b:tabView activeIndex="0"  contentStyle="border-right: 1px solid #ddd;border-left: 1px solid #ddd;border-bottom: 1px solid #ddd;padding:10px">
              <b:tab title="JSF markup">
                <b:panel>
                  <script type="syntaxhighlighter"
                  class="brush: xml; toolbar: false;gutter: false; first-line: 1">
                  <![CDATA[
 				<b:form>
					<b:panelGrid columns="3">
						<b:selectOneMenu value="&num;{beersBean.selectedBeer}" ajax="true" process="@this" update="@next @next:@next" label="Your favorite beer brand?">
							<f:converter converterId="beerConverter" />
							<f:selectItems value="&num;{beersBean.beers}" var="beer"
								itemValue="&num;{beer}" itemLabel="&num;{beer.brand}" />
						</b:selectOneMenu>
						<b:inputText value="&num;{beersBean.selectedBeer.id}" label="id"  disabled="true"/>
						<b:inputText value="&num;{beersBean.selectedBeer.brand}" label="name"  disabled="true"/>
					
						<b:selectOneMenu value="&num;{beersBean.selectedBeer2}" ajax="true" process="@this" update="@after"
							converter="beerConverter" label="Any other beer you like?">
							<f:selectItems value="&num;{beersBean.beers}" var="beer"
								itemValue="&num;{beer}" itemLabel="&num;{beer.brand}" />
						</b:selectOneMenu>
						<b:inputText value="&num;{beersBean.selectedBeer2.id}" label="id" disabled="true"/>
						<b:inputText value="&num;{beersBean.selectedBeer2.brand}" label="name" disabled="true"/>
     					<b:selectOneMenu value="&num;{beersBean.selectedWine}" ajax="true" process="@this" update="@after"
     						label="Any wine you like?">
     						<f:selectItems value="&num;{beersBean.wines}" var="wine"
     							itemValue="&num;{wine}" itemLabel="&num;{wine.brand}" />
     					</b:selectOneMenu>
     					<b:inputText value="&num;{beersBean.selectedWine.id}" label="id" disabled="true"/>
     					<b:inputText value="&num;{beersBean.selectedWine.brand}" label="name" disabled="true"/>
     				</b:panelGrid>
				</b:form>
                  ]]>
                  </script>
                </b:panel>
              </b:tab>
              <b:tab title="Custom converter">
                <b:panel>
                  <script type="syntaxhighlighter"
                  class="brush: java; toolbar: false;gutter: false; first-line: 1">
                  <![CDATA[
 @FacesConverter(value = "beerConverter")
public class BeerConverter implements Converter {

	@Override
	public Object getAsObject(FacesContext ctx, UIComponent uiComponent, String beerId) {
		System.out.println("getAsObject:" + beerId);

		ValueExpression vex = ctx.getApplication().getExpressionFactory().createValueExpression(ctx.getELContext(),
				"#{beersBean}", BeersBean.class);

		BeersBean beers = (BeersBean) vex.getValue(ctx.getELContext());
		return beers.getBeer(Integer.valueOf(beerId));
	}

	@Override
	public String getAsString(FacesContext facesContext, UIComponent uiComponent, Object beer) {
		System.out.println("getAsString:" + beer);
		return ((Beer) beer).getId().toString();
	}
}

                  ]]>
                  </script>
                </b:panel>
              </b:tab>
             <b:tab title="Custom converter with annotation">
                <b:panel>
                  <script type="syntaxhighlighter"
                  class="brush: java; toolbar: false;gutter: false; first-line: 1">
                  <![CDATA[
@FacesConverter(forClass = Wine.class)
public class WineConverter implements Converter {

	@Override
	public Object getAsObject(FacesContext ctx, UIComponent uiComponent, String wineId) {
		System.out.println("getAsObject:" + wineId);

		ValueExpression vex = ctx.getApplication().getExpressionFactory().createValueExpression(ctx.getELContext(),
				"#{beersBean}", BeersBean.class);

		BeersBean beers = (BeersBean) vex.getValue(ctx.getELContext());
		return beers.getWine(Integer.valueOf(wineId));
	}

	@Override
	public String getAsString(FacesContext facesContext, UIComponent uiComponent, Object wine) {
		System.out.println("getAsString:" + wine);
		return ((Wine) wine).getId().toString();
	}
}
                   ]]>
                  </script>
                </b:panel>
              </b:tab>
              <b:tab title="Java Bean">
                <b:panel>
                  <script type="syntaxhighlighter"
                  class="brush: java; toolbar: false;gutter: false; first-line: 1">
                  <![CDATA[
@ManagedBean
@jakarta.faces.bean.ViewScoped
public class BeersBean implements Serializable {
	private static final long serialVersionUID = -3192521384162408966L;
	private Beer selectedBeer;
	private Beer selectedBeer2;
	private List<Wine> wines;
	private List<Beer> beers;

	private Wine selectedWine;

	// getters and setter omitted for the sake of brevity

	public BeersBean() {
		beers = new ArrayList<Beer>();
		beers.add(new Beer(10, "La Chouffe"));
		beers.add(new Beer(20, "Stella Artois"));
		beers.add(new Beer(30, "Westmalle Trippel"));

		wines = new ArrayList<>();
		getWines().add(new Wine(10, "Riesling"));
		getWines().add(new Wine(20, "Pinet Noir"));
		getWines().add(new Wine(30, "Merlot"));
	}

	public Beer getBeer(Integer id) {
		if (id == null) {
			throw new IllegalArgumentException("no id provided");
		}
		for (Beer beer : beers) {
			if (id.equals(beer.getId())) {
				return beer;
			}
		}
		return null;
	}

	public Wine getWine(Integer id) {
		if (id == null) {
			throw new IllegalArgumentException("no id provided");
		}
		for (Wine wine : wines) {
			if (id.equals(wine.getId())) {
				return wine;
			}
		}
		return null;
	}
}
]]>
                  </script>
                </b:panel>
              </b:tab>
            </b:tabView>
          </f:facet>
        </b:panel>
 		
 
 
        <script type="text/javascript">
        SyntaxHighlighter.all();
        </script>
      </ui:define>
    </ui:composition>
  </h:body>
</html>
