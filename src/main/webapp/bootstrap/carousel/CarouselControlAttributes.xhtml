<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:fragment
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:b="http://bootsfaces.net/ui"
    xmlns:ui="http://java.sun.com/jsf/facelets">

    <b:panel look="info">
        <f:facet name="heading">
            <b>Attributes of &lt;b:carouselControl &gt;</b>
        </f:facet>
        <div class="table-responsive">
            <table class="table table-striped table-hover"
                   style="background-color: #fff">
                <thead>
                    <tr>
                        <th>Attribute</th>
                        <th>Default value</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>action</td>
                        <td>(none)</td>
                        <td>The button action, this can be method expression or a string outcome.</td>
                    </tr>
                    <tr>
                        <td>action-listener<br />actionListener (alternative writing)</td>
                        <td>(none)</td>
                        <td>A method expression that refers to a method with this signature: void methodName(Action-Event).</td>
                    </tr>
                    <tr>
                        <td>ajax</td>
                        <td>false</td>
                        <td>Whether the Button submits the form with AJAX.</td>
                    </tr>
                    <tr>
                        <td>auto-update<br />autoUpdate (alternative writing)</td>
                        <td>false</td>
                        <td>Setting this flag updates the widget on every AJAX request.</td>
                    </tr>
                    <tr>
                        <td>delay</td>
                        <td>(none)</td>
                        <td>Delays the AJAX request.</td>
                    </tr>
                    <tr>
                        <td>direction</td>
                        <td>(none)</td>
                        <td>Can take one of the values 'left' and 'right'. Determines whether the carousel scrolls to the next or to the previous image.</td>
                    </tr>
                    <tr>
                        <td>disabled</td>
                        <td>false</td>
                        <td>Boolean value to specify if the button is disabled.</td>
                    </tr>
                    <tr>
                        <td>id</td>
                        <td>(none)</td>
                        <td>Unique identifier of the component in a namingContainer.</td>
                    </tr>
                    <tr>
                        <td>onclick</td>
                        <td>(none)</td>
                        <td>The onclick attribute.</td>
                    </tr>
                    <tr>
                        <td>oncomplete</td>
                        <td>(none)</td>
                        <td>JavaScript to be executed when ajax completes.</td>
                    </tr>
                    <tr>
                        <td>ondblclick</td>
                        <td>(none)</td>
                        <td>Client side callback to execute when input element is double clicked.</td>
                    </tr>
                    <tr>
                        <td>onerror</td>
                        <td>(none)</td>
                        <td>JavaScript to be executed when ajax results on an error (including both network errors and Java exceptions).</td>
                    </tr>
                    <tr>
                        <td>onmousedown</td>
                        <td>(none)</td>
                        <td>Client side callback to execute when a pointer input element is pressed down over input element.</td>
                    </tr>
                    <tr>
                        <td>onmousemove</td>
                        <td>(none)</td>
                        <td>Client side callback to execute when a pointer input element is moved within input element.</td>
                    </tr>
                    <tr>
                        <td>onmouseout</td>
                        <td>(none)</td>
                        <td>Client side callback to execute when a pointer input element is moved away from input element.</td>
                    </tr>
                    <tr>
                        <td>onmouseover</td>
                        <td>(none)</td>
                        <td>Client side callback to execute when a pointer input element is moved onto input element.</td>
                    </tr>
                    <tr>
                        <td>onmouseup</td>
                        <td>(none)</td>
                        <td>Client side callback to execute when a pointer input element is released over input element.</td>
                    </tr>
                    <tr>
                        <td>onsuccess</td>
                        <td>(none)</td>
                        <td>JavaScript to be executed when ajax completes with success (i.e. there's neither a network error nor a Java exception).</td>
                    </tr>
                    <tr>
                        <td>process</td>
                        <td>(none)</td>
                        <td>Comma or space separated list of ids or search expressions denoting which values are to be sent to the server.</td>
                    </tr>
                    <tr>
                        <td>rendered</td>
                        <td>false</td>
                        <td>Boolean value to specify the rendering of the component, when set to false the component will not be rendered.</td>
                    </tr>
                    <tr>
                        <td>style</td>
                        <td>(none)</td>
                        <td>Inline style of the input element.</td>
                    </tr>
                    <tr>
                        <td>style-class<br />styleClass (alternative writing)</td>
                        <td>(none)</td>
                        <td>Style class of this element.</td>
                    </tr>
                    <tr>
                        <td>tooltip</td>
                        <td>(none)</td>
                        <td>The text of the tooltip.</td>
                    </tr>
                    <tr>
                        <td>tooltip-container<br />tooltipContainer (alternative writing)</td>
                        <td> body </td>
                        <td>Where is the tooltip div generated? That's primarily a technical value that can be used to fix rendering errors in special cases. Also see data-container in the documentation of Bootstrap. The default value is body.</td>
                    </tr>
                    <tr>
                        <td>tooltip-delay<br />tooltipDelay (alternative writing)</td>
                        <td>0 </td>
                        <td>The tooltip is shown and hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
                    </tr>
                    <tr>
                        <td>tooltip-delay-hide<br />tooltipDelayHide (alternative writing)</td>
                        <td>0 </td>
                        <td>The tooltip is hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
                    </tr>
                    <tr>
                        <td>tooltip-delay-show<br />tooltipDelayShow (alternative writing)</td>
                        <td>0 </td>
                        <td>The tooltip is shown with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
                    </tr>
                    <tr>
                        <td>tooltip-position<br />tooltipPosition (alternative writing)</td>
                        <td>(none)</td>
                        <td>Where is the tooltip to be displayed? Possible values: "top", "bottom", "right", "left", "auto", "auto top", "auto bottom", "auto right" and "auto left". Default to "bottom".</td>
                    </tr>
                    <tr>
                        <td>update</td>
                        <td>(none)</td>
                        <td>Component(s) to be updated with ajax.</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </b:panel>
</ui:fragment>
