<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:fragment
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:h="jakarta.faces.html"
  xmlns:f="jakarta.faces.core"
  xmlns:b="http://bootsfaces.net/ui"
  xmlns:ui="jakarta.faces.facelets">

    <b:panel look="info">
      <f:facet name="heading">
        <b>Attributes of &lt;b:video &gt;</b>
      </f:facet>
      <div class="table-responsive">
        <table class="table table-striped table-hover"
          style="background-color: #fff">
          <thead>
            <tr>
              <th>Attribute</th>
              <th>Default value</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
                <td>ajax</td>
                <td>false</td>
                <td>Whether the Button submits the form with AJAX.</td>
            </tr>
            <tr>
                <td>auto-update<br />autoUpdate (alternative writing)</td>
                <td>false</td>
                <td>Setting this flag updates the widget on every AJAX request.</td>
            </tr>
            <tr>
                <td>autoplay</td>
                <td> false </td>
                <td>Setting this to true will start the video on page load. By default, autoplay is deactivated. Note that mobile devices never start videos automatically.</td>
            </tr>
            <tr>
                <td>binding</td>
                <td>(none)</td>
                <td>An EL expression referring to a server side UIComponent instance in a backing bean.</td>
            </tr>
            <tr>
                <td>col-lg<br />colLg (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on large screens (≥1200 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-md<br />colMd (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on medium screens (≥992 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-sm<br />colSm (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on small screens (≥768p pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>col-xs<br />colXs (alternative writing)</td>
                <td> -1 </td>
                <td>Integer value to specify how many columns to span on tiny screens (≤ 767 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>controls</td>
                <td> true </td>
                <td>Hide the controls (start, stop, seeking, volume etc.) by setting this property to false. By default, the controls are shown.</td>
            </tr>
            <tr>
                <td>delay</td>
                <td>(none)</td>
                <td>Delays the AJAX request.</td>
            </tr>
            <tr>
                <td>disabled</td>
                <td>false</td>
                <td>Boolean value to specify if the button is disabled.</td>
            </tr>
            <tr>
                <td>display</td>
                <td> block </td>
                <td>If you use the "visible" attribute, the value of this attribute is added. Legal values: block, inline, inline-block. Default: block.</td>
            </tr>
            <tr>
                <td>hidden</td>
                <td>(none)</td>
                <td>This column is hidden on a certain screen size and below. Legal values: lg, md, sm, xs.</td>
            </tr>
            <tr>
                <td>id</td>
                <td>(none)</td>
                <td>Unique identifier of the component in a namingContainer.</td>
            </tr>
            <tr>
                <td>immediate</td>
                <td>false</td>
                <td>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase. Default is false.</td>
            </tr>
            <tr>
                <td>large-screen<br />largeScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-lg. Integer value to specify how many columns to span on large screens (≥1200 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>loop</td>
                <td> false </td>
                <td>Setting this flag to true causes the video to start over when it's finished. By default, loop is set to false.</td>
            </tr>
            <tr>
                <td>medium-screen<br />mediumScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-md. Integer value to specify how many columns to span on medium screens (≥992 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>offset</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-lg<br />offsetLg (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-md<br />offsetMd (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-sm<br />offsetSm (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>offset-xs<br />offsetXs (alternative writing)</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to offset.</td>
            </tr>
            <tr>
                <td>onabort</td>
                <td>(none)</td>
                <td>Fires when the loading of an audio/video is aborted</td>
            </tr>
            <tr>
                <td>oncanplay</td>
                <td>(none)</td>
                <td>Fires when the browser can start playing the audio/video</td>
            </tr>
            <tr>
                <td>oncanplaythrough</td>
                <td>(none)</td>
                <td>Fires when the browser can play through the audio/video without stopping for buffering</td>
            </tr>
            <tr>
                <td>onclick</td>
                <td>(none)</td>
                <td>The onclick attribute.</td>
            </tr>
            <tr>
                <td>oncomplete</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax completes.</td>
            </tr>
            <tr>
                <td>ondurationchange</td>
                <td>(none)</td>
                <td>Fires when the duration of the audio/video is changed</td>
            </tr>
            <tr>
                <td>onemptied</td>
                <td>(none)</td>
                <td>Fires when the current playlist is empty</td>
            </tr>
            <tr>
                <td>onended</td>
                <td>(none)</td>
                <td>Fires when the current playlist is ended</td>
            </tr>
            <tr>
                <td>onerror</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax results on an error (including both network errors and Java exceptions).</td>
            </tr>
            <tr>
                <td>onloadeddata</td>
                <td>(none)</td>
                <td>Fires when the browser has loaded the current frame of the audio/video</td>
            </tr>
            <tr>
                <td>onloadedmetadata</td>
                <td>(none)</td>
                <td>Fires when the browser has loaded meta data for the audio/video</td>
            </tr>
            <tr>
                <td>onloadstart</td>
                <td>(none)</td>
                <td>Fires when the browser starts looking for the audio/video</td>
            </tr>
            <tr>
                <td>onpause</td>
                <td>(none)</td>
                <td>Fires when the audio/video has been paused</td>
            </tr>
            <tr>
                <td>onplay</td>
                <td>(none)</td>
                <td>Fires when the audio/video has been started or is no longer paused</td>
            </tr>
            <tr>
                <td>onplaying</td>
                <td>(none)</td>
                <td>Fires when the audio/video is playing after having been paused or stopped for buffering</td>
            </tr>
            <tr>
                <td>onprogress</td>
                <td>(none)</td>
                <td>Fires when the browser is downloading the audio/video</td>
            </tr>
            <tr>
                <td>onratechange</td>
                <td>(none)</td>
                <td>Fires when the playing speed of the audio/video is changed</td>
            </tr>
            <tr>
                <td>onseeked</td>
                <td>(none)</td>
                <td>Fires when the user is finished moving/skipping to a new position in the audio/video</td>
            </tr>
            <tr>
                <td>onseeking</td>
                <td>(none)</td>
                <td>Fires when the user starts moving/skipping to a new position in the audio/video</td>
            </tr>
            <tr>
                <td>onstalled</td>
                <td>(none)</td>
                <td>Fires when the browser is trying to get media data, but data is not available</td>
            </tr>
            <tr>
                <td>onsuccess</td>
                <td>(none)</td>
                <td>JavaScript to be executed when ajax completes with success (i.e. there's neither a network error nor a Java exception).</td>
            </tr>
            <tr>
                <td>onsuspend</td>
                <td>(none)</td>
                <td>Fires when the browser is intentionally not getting media data</td>
            </tr>
            <tr>
                <td>ontimeupdate</td>
                <td>(none)</td>
                <td>Fires when the current playback position has changed</td>
            </tr>
            <tr>
                <td>onvolumechange</td>
                <td>(none)</td>
                <td>Fires when the volume has been changed</td>
            </tr>
            <tr>
                <td>onwaiting</td>
                <td>(none)</td>
                <td>Fires when the video stops because it needs to buffer the next frame</td>
            </tr>
            <tr>
                <td>process</td>
                <td>(none)</td>
                <td>Comma or space separated list of ids or search expressions denoting which values are to be sent to the server.</td>
            </tr>
            <tr>
                <td>rendered</td>
                <td>false</td>
                <td>Boolean value to specify the rendering of the component, when set to false the component will not be rendered.</td>
            </tr>
            <tr>
                <td>required</td>
                <td>(none)</td>
                <td>URL of the video to be shown. If you use a relative path (i.e. without http:// and without the domain name), the video will be taken from your own server.</td>
            </tr>
            <tr>
                <td>small-screen<br />smallScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-sm. Integer value to specify how many columns to span on small screens (≥768p pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>span</td>
                <td>(none)</td>
                <td>Integer value to specify how many columns to span on medium screens (≥992 pixels). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>src</td>
                <td>(none)</td>
                <td></td>
            </tr>
            <tr>
                <td>style</td>
                <td>(none)</td>
                <td>Inline CSS of the tab.</td>
            </tr>
            <tr>
                <td>style-class<br />styleClass (alternative writing)</td>
                <td>(none)</td>
                <td>Style class of the div surrounding the tab pane.</td>
            </tr>
            <tr>
                <td>tiny-screen<br />tinyScreen (alternative writing)</td>
                <td> -1 </td>
                <td>Alternative spelling to col-xs. Integer value to specify how many columns to span on tiny screens (≤ 767 pixels wide). The number may optionally be followed by "column" or "columns". Alternative legal values: half, one-third, two-thirds, one-fourth, three-fourths.</td>
            </tr>
            <tr>
                <td>tooltip</td>
                <td>(none)</td>
                <td>The text of the tooltip.</td>
            </tr>
            <tr>
                <td>tooltip-container<br />tooltipContainer (alternative writing)</td>
                <td> body </td>
                <td>Where is the tooltip div generated? That's primarily a technical value that can be used to fix rendering errors in special cases. Also see data-container in the documentation of Bootstrap. The default value is body.</td>
            </tr>
            <tr>
                <td>tooltip-delay<br />tooltipDelay (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is shown and hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-delay-hide<br />tooltipDelayHide (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-delay-show<br />tooltipDelayShow (alternative writing)</td>
                <td>0 </td>
                <td>The tooltip is shown with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).</td>
            </tr>
            <tr>
                <td>tooltip-position<br />tooltipPosition (alternative writing)</td>
                <td>(none)</td>
                <td>Where is the tooltip to be displayed? Possible values: "top", "bottom", "right", "left", "auto", "auto top", "auto bottom", "auto right" and "auto left". Default to "bottom".</td>
            </tr>
            <tr>
                <td>update</td>
                <td>(none)</td>
                <td>Component(s) to be updated with ajax.</td>
            </tr>
            <tr>
                <td>visible</td>
                <td>(none)</td>
                <td>This column is shown on a certain screen size and above. Legal values: lg, md, sm, xs.</td>
            </tr>
          </tbody>
        </table>
      </div>
    </b:panel>
</ui:fragment>
